import{d as v,a as k,o as V,c as U,w as l,e as t,g as u,k as x,l as S,i as g,m as $,s as T,r as w,q as A,f as c,v as F,A as z,y as L,B as N,C as E,z as M,D as O}from"./index-322f1065.js";/* empty css               *//* empty css                  *//* empty css                 */import{u as B,d as b}from"./index-0bf508d5.js";import{u as q}from"./user-7ebb3a00.js";const j=v({__name:"AddContests",setup(n){const o=k({title:"",season:"e.g. 2024",type:"e.g.: Engineering"}),_=()=>{var s;(async()=>{const{data:e,error:d}=await T.from("Contests").insert([{title:o.title,season:o.season,type:o.type}]).select();if(d){console.error("Error submitting a new data to the database:",d);return}else console.log("A new data submitted!");return e})(),(s=R.methods)==null||s.whenCreated()};return(a,s)=>{const e=x,d=S,f=g,m=$;return V(),U(m,{model:o,"label-width":"auto",style:{"max-width":"600px"}},{default:l(()=>[t(d,{label:"Title"},{default:l(()=>[t(e,{modelValue:o.title,"onUpdate:modelValue":s[0]||(s[0]=p=>o.title=p)},null,8,["modelValue"])]),_:1}),t(d,{label:"Season"},{default:l(()=>[t(e,{placeholder:"e.g.",modelValue:o.season,"onUpdate:modelValue":s[1]||(s[1]=p=>o.season=p)},null,8,["modelValue"])]),_:1}),t(d,{label:"Type"},{default:l(()=>[t(e,{modelValue:o.type,"onUpdate:modelValue":s[2]||(s[2]=p=>o.type=p)},null,8,["modelValue"])]),_:1}),t(d,null,{default:l(()=>[t(f,{type:"primary",onClick:_},{default:l(()=>s[3]||(s[3]=[u("Create")])),_:1})]),_:1})]),_:1},8,["model"])}}}),I=B(),i=k({title:"",season:"",type:""}),G={name:"EditContests",data(){return{contestRow:[]}},async mounted(){this.whenCreated()},methods:{async whenCreated(){const{data:n,error:o}=await b.methods.getContestByID(I.chosenContestIDForEdit);console.log(n),o?console.error("Error fetching contests:",o):this.contestRow=n||[]}}},H=v({...G,setup(n){const o=()=>{var a;(async()=>{const{data:s,error:e}=await b.methods.editContestRow(I.chosenContestIDForEdit,i.title,i.season,i.type);return s})(),(a=R.methods)==null||a.whenCreated()};return(_,a)=>{const s=x,e=S,d=g,f=$;return V(),U(f,{model:i,"label-width":"auto",style:{"max-width":"600px"}},{default:l(()=>[t(e,{label:"Title"},{default:l(()=>[t(s,{modelValue:i.title,"onUpdate:modelValue":a[0]||(a[0]=m=>i.title=m)},null,8,["modelValue"])]),_:1}),t(e,{label:"Season"},{default:l(()=>[t(s,{modelValue:i.season,"onUpdate:modelValue":a[1]||(a[1]=m=>i.season=m)},null,8,["modelValue"])]),_:1}),t(e,{label:"Type"},{default:l(()=>[t(s,{modelValue:i.type,"onUpdate:modelValue":a[2]||(a[2]=m=>i.type=m)},null,8,["modelValue"])]),_:1}),t(e,null,{default:l(()=>[t(d,{type:"primary",onClick:o},{default:l(()=>a[3]||(a[3]=[u("Update")])),_:1})]),_:1})]),_:1},8,["model"])}}}),J={class:"about"},K={style:{"padding-bottom":"15px"}},P={style:{"margin-bottom":"30px"}},C=B(),Q=q(),W=Q.fetchUser();console.log(W);const y=w("false"),X={name:"ContestsList",data(){return{Contests:[]}},async created(){this.whenCreated()},methods:{async whenCreated(){const{data:n,error:o}=await b.methods.getContests();console.log(n),o?console.error("Error fetching contests:",o):this.Contests=n||[]},async deleteRow(n){console.log(n);const{error:o}=await b.methods.deleteByID("Contests",n);o?console.error("Error deleting the selected data:",o):(console.log("Successfully delete the item from table."),this.whenCreated())},chooseContest(n){C.setContestIDNextLevel(n),F.push({name:"parentCriteriaList"}),console.log("Set contest ID to "+n),console.log("Successfully choose the given contest and route.")},async handleEdit(n){const o=this.Contests[n].id;C.setContestIDEdit(o)},confirmDelete(){z.confirm("Are you confirm to chose  ?").then(()=>{this.deleteRow(C.chosenContestIDForDelete),deleteDrawer.value=!1}).catch(()=>{})},handleDeleteButton(n){console.log(n),console.log(this.Contests[n].id),C.setChosenContestIDForDelete(this.Contests[n].id),console.log(C.chosenContestIDForDelete)}}},R=v({...X,setup(n){const o=w(!1),_=w(!1),a=w(!1);return(s,e)=>{const d=g,f=M,m=L,p=N,D=O;return V(),A("div",J,[e[16]||(e[16]=c("div",{class:"header"},[c("h1",null,"List of Contests")],-1)),c("div",K,[t(d,{type:"primary",onClick:e[0]||(e[0]=r=>o.value=!0)},{default:l(()=>e[8]||(e[8]=[u("Add a new contest")])),_:1})]),t(m,{data:s.Contests,stripe:"",border:"",style:{width:"100%"}},{default:l(()=>[t(f,{fixed:"",prop:"title",label:"Title",width:"180"}),t(f,{prop:"season",label:"Season",width:"180"}),t(f,{prop:"type",label:"Type",width:"180"}),t(f,{fixed:"right",label:"Operations",width:"180"},{default:l(r=>[t(d,{link:"",type:"primary",size:"small",onClick:E(h=>(s.handleEdit(r.$index),_.value=!0),["prevent"])},{default:l(()=>e[9]||(e[9]=[u("Edit")])),_:2},1032,["onClick"]),t(d,{link:"",type:"danger",size:"small",onClick:h=>{s.handleDeleteButton(r.$index),a.value=!0}},{default:l(()=>e[10]||(e[10]=[u("Delete")])),_:2},1032,["onClick"]),t(d,{link:"",type:"info",onClick:E(h=>s.chooseContest(r.$index),["prevent"])},{default:l(()=>e[11]||(e[11]=[u("Choose")])),_:2},1032,["onClick"])]),_:1})]),_:1},8,["data"]),t(p,{modelValue:o.value,"onUpdate:modelValue":e[1]||(e[1]=r=>o.value=r),title:"Add a new contest"},{default:l(()=>[t(j)]),_:1},8,["modelValue"]),t(p,{modelValue:_.value,"onUpdate:modelValue":e[2]||(e[2]=r=>_.value=r),title:"Edit the chosen contest"},{default:l(()=>[t(H)]),_:1},8,["modelValue"]),t(p,{modelValue:a.value,"onUpdate:modelValue":e[7]||(e[7]=r=>a.value=r),title:"Delete the chosen contest"},{default:l(()=>[c("div",P,[t(D,{modelValue:y.value,"onUpdate:modelValue":e[3]||(e[3]=r=>y.value=r),value:"true",size:"large"},{default:l(()=>e[12]||(e[12]=[u(" Delete ")])),_:1},8,["modelValue"]),t(D,{modelValue:y.value,"onUpdate:modelValue":e[4]||(e[4]=r=>y.value=r),value:"false",size:"large"},{default:l(()=>e[13]||(e[13]=[u(" Discard ")])),_:1},8,["modelValue"])]),t(d,{onClick:e[5]||(e[5]=r=>a.value=!1)},{default:l(()=>e[14]||(e[14]=[u("Cancel")])),_:1}),t(d,{type:"primary",onClick:e[6]||(e[6]=r=>s.confirmDelete())},{default:l(()=>e[15]||(e[15]=[u("Confirm")])),_:1})]),_:1},8,["modelValue"])])}}});export{R as default};
